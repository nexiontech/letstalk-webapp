name: Dependency Check

on:
  schedule:
    - cron: '0 9 * * 1'  # Run every Monday at 9 AM UTC
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read
  issues: write

jobs:
  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        id: audit
        run: |
          echo "## 🔒 Security Audit Results" > audit-report.md
          echo "" >> audit-report.md

          if npm audit --audit-level=moderate; then
            echo "✅ No security vulnerabilities found!" >> audit-report.md
            echo "audit_status=clean" >> $GITHUB_OUTPUT
          else
            echo "⚠️ Security vulnerabilities detected!" >> audit-report.md
            echo "" >> audit-report.md
            echo "### Detailed Report:" >> audit-report.md
            echo "\`\`\`" >> audit-report.md
            npm audit >> audit-report.md || true
            echo "\`\`\`" >> audit-report.md
            echo "audit_status=vulnerabilities" >> $GITHUB_OUTPUT
          fi

      - name: Check for outdated packages
        run: |
          echo "" >> audit-report.md
          echo "## 📦 Outdated Packages" >> audit-report.md
          echo "" >> audit-report.md

          if npm outdated --json > outdated.json 2>/dev/null; then
            if [ -s outdated.json ]; then
              echo "### Packages that can be updated:" >> audit-report.md
              echo "\`\`\`json" >> audit-report.md
              cat outdated.json >> audit-report.md
              echo "\`\`\`" >> audit-report.md
            else
              echo "✅ All packages are up to date!" >> audit-report.md
            fi
          else
            echo "✅ All packages are up to date!" >> audit-report.md
          fi

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-audit-report
          path: audit-report.md
          retention-days: 30

      - name: Create issue if vulnerabilities found
        if: steps.audit.outputs.audit_status == 'vulnerabilities'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const reportContent = fs.readFileSync('audit-report.md', 'utf8');

            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'security,dependencies',
              state: 'open'
            });

            if (issues.length === 0) {
              const issueBody = `${reportContent}

              ---
              **Automated Issue:** This issue was automatically created by the dependency check workflow.
              **Action Required:** Please review and address the security vulnerabilities listed above.
              **Next Steps:**
              1. Run \`npm audit fix\` to automatically fix issues
              2. For manual fixes, run \`npm audit\` for detailed information
              3. Close this issue once all vulnerabilities are resolved`;

              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '🔒 Security Vulnerabilities Detected in Dependencies',
                body: issueBody,
                labels: ['security', 'dependencies', 'automated']
              });
            }

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install license checker
        run: npm install -g license-checker

      - name: Check licenses
        run: |
          echo "## 📄 License Compliance Report" > license-report.md
          echo "" >> license-report.md
          echo "### All Package Licenses:" >> license-report.md
          echo "\`\`\`" >> license-report.md
          license-checker --summary >> license-report.md
          echo "\`\`\`" >> license-report.md

      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-compliance-report
          path: license-report.md
          retention-days: 30

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Analyze bundle size
        run: |
          echo "## 📊 Bundle Size Analysis" > bundle-report.md
          echo "" >> bundle-report.md
          echo "### Build Output:" >> bundle-report.md
          echo "\`\`\`" >> bundle-report.md
          ls -la dist/ >> bundle-report.md
          echo "\`\`\`" >> bundle-report.md

          echo "" >> bundle-report.md
          echo "### Asset Sizes:" >> bundle-report.md
          echo "\`\`\`" >> bundle-report.md
          find dist/ -type f -name "*.js" -o -name "*.css" | xargs ls -lh >> bundle-report.md
          echo "\`\`\`" >> bundle-report.md

          TOTAL_SIZE=$(du -sh dist/ | cut -f1)
          echo "" >> bundle-report.md
          echo "### Summary:" >> bundle-report.md
          echo "- **Total bundle size:** $TOTAL_SIZE" >> bundle-report.md
          echo "- **Generated:** $(date)" >> bundle-report.md

      - name: Upload bundle report
        uses: actions/upload-artifact@v4
        with:
          name: bundle-size-report
          path: bundle-report.md
          retention-days: 30
